import{a as d,k as p,o as u,c as h,w as t,l as e,p as s,m as a,s as _}from"./entry.c3beb398.js";import{b as m,_ as f,a as g}from"./Expander.vue.f8b0ce91.js";import{_ as b}from"./Content.vue.73b30233.js";const x=""+new URL("synthszr.acde00c0.png",import.meta.url).href,k=s("h2",{class:"text-xl"},"Synthszr",-1),w=s("p",{class:"font-light"},"A complex synthesizer built with Svelte and Julia",-1),y=s("p",null," I worked with a team to build a digital synthesizer with a web-based frontend built in Svelte which communicates using WebSockets with a Julia backend for audio processing and output and accepts input from a MIDI keyboard. ",-1),z=s("img",{src:x,alt:"Synthszr UI",class:"w-full h-auto my-2 shadow-md",width:"1171",height:"454"},null,-1),v=s("h2",{class:"text-xl"},"OpenSpace",-1),I=s("p",{class:"font-light"},"An audio spatialization system for headphones",-1),S=s("h2",{class:"text-xl"},"Portfolio",-1),N=s("p",{class:"font-light"},"My portfolio and personal website",-1),T=d({__name:"projects",setup(j){const l="Projects";return p({title:l}),(C,V)=>{const o=_,n=m,i=f,c=g,r=b;return u(),h(r,{title:l,gap:!1},{default:t(()=>[e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[k]),description:t(()=>[w]),content:t(()=>[y,e(n,null,{default:t(()=>[e(o,{name:"logos:svelte-icon"}),e(o,{name:"logos:julia",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:websocket",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"simple-icons:midi"})]),_:1}),z]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[v]),description:t(()=>[I]),content:t(()=>[s("p",null,[a(" I conducted research on audio spatialization for music through headphones by splitting audio into separate instrument tracks, localizing each track in virtual 3D space, and playing back the result using a head-related transfer function. Check "),e(c,{to:"https://github.com/kari-naga/OpenSpace",class:"underline"},{default:t(()=>[a("this Github repository")]),_:1}),a(" for more information. ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:python"}),e(o,{name:"logos:ffmpeg-icon"})]),_:1})]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[S]),description:t(()=>[N]),content:t(()=>[s("p",null,[a(" I built my portfolio (this site) using Vue with Nuxt.js static site generation. The site is hosted on GitHub Pages and the source can be found "),e(c,{to:"https://github.com/kari-naga/kari-naga.github.io",class:"underline"},{default:t(()=>[a("here")]),_:1}),a(". ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:nuxt-icon"}),e(o,{name:"logos:vue"})]),_:1})]),_:1})]),_:1})}}});export{T as default};
