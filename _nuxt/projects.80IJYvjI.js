import{b as d,a as h,_ as u}from"./NavLink.vue.STDCnMsT.js";import{g as p,u as m,o as g,h as f,w as t,b as e,a as o,d as s,k as _}from"./entry.JWJsqObj.js";import{_ as b}from"./Content.vue.Puh0uPvK.js";const w=""+new URL("skyward-counter.XaEwsJMF.png",import.meta.url).href,k=""+new URL("metroid.uDqE-Wdo.png",import.meta.url).href,x=""+new URL("synthszr.0ccTDzjJ.png",import.meta.url).href,y=o("h2",{class:"text-xl"},"Skyward Counter",-1),v=o("p",{class:"font-light"},"A bullet hell prototype with a unique twist",-1),z=o("img",{src:w,alt:"Metroid Recreation Screenshot",class:"w-full h-auto my-2 shadow-md",width:"2560",height:"1440"},null,-1),I=o("h2",{class:"text-xl"},"Metroid",-1),S=o("p",{class:"font-light"},"A faithful recreation of Metroid made in Unity",-1),j=o("img",{src:k,alt:"Metroid Recreation Screenshot",class:"w-full h-auto my-2 shadow-md",width:"800",height:"748"},null,-1),M=o("h2",{class:"text-xl"},"Synthszr",-1),C=o("p",{class:"font-light"},"A complex synthesizer built with Svelte and Julia",-1),N=o("p",null," I worked with a team to build a digital synthesizer with a web-based frontend built in Svelte which communicates using WebSockets with a Julia backend for audio processing and output and accepts input from a MIDI keyboard. ",-1),U=o("img",{src:x,alt:"Synthszr UI",class:"w-full h-auto my-2 shadow-md",width:"1171",height:"454"},null,-1),D=o("h2",{class:"text-xl"},"OpenSpace",-1),R=o("p",{class:"font-light"},"An audio spatialization system for headphones",-1),T=o("h2",{class:"text-xl"},"Portfolio",-1),A=o("p",{class:"font-light"},"My portfolio and personal website",-1),r="Projects",B=p({__name:"projects",setup(E){return m({title:r}),(J,L)=>{const i=d,a=_,n=h,l=u,c=b;return g(),f(c,{title:r,gap:!1},{default:t(()=>[e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[y]),description:t(()=>[v]),content:t(()=>[o("p",null,[s(" I built a prototype for a bullet hell game with a unique parrying mechanic in just a few weeks. In Skyward Counter, the only way to deal damage to the enemy is to parry their projectiles just before they hit you, making for a high-risk, high-reward, adrenaline-filled game. The game design, UI, and mechanics are completely bespoke, and I hope to eventually replace the assets with custom ones. You can play the game "),e(i,{to:"https://linkstorm.itch.io/skyward-counter",class:"underline"},{default:t(()=>[s("here")]),_:1}),s("! ")]),e(n,null,{default:t(()=>[e(a,{name:"logos:unity",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(a,{name:"logos:c-sharp"}),e(a,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(a,{name:"logos:jira"})]),_:1}),z]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[I]),description:t(()=>[S]),content:t(()=>[o("p",null,[s(" I worked with a partner to build a faithful recreation of the classic NES game Metroid. I specifically built out the player movement systems, the animation system, the room transitions and door effects, the camera controller, and the custom laser beam weapon. You can play it "),e(i,{to:"https://linkstorm.itch.io/metroid",class:"underline"},{default:t(()=>[s("here")]),_:1}),s("! ")]),e(n,null,{default:t(()=>[e(a,{name:"logos:unity",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(a,{name:"logos:c-sharp"}),e(a,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(a,{name:"logos:jira"})]),_:1}),j]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[M]),description:t(()=>[C]),content:t(()=>[N,e(n,null,{default:t(()=>[e(a,{name:"logos:svelte-icon"}),e(a,{name:"logos:julia",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(a,{name:"logos:websocket",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(a,{name:"simple-icons:midi"})]),_:1}),U]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose pb-2","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[D]),description:t(()=>[R]),content:t(()=>[o("p",null,[s(" I conducted research on audio spatialization for music through headphones by splitting audio into separate instrument tracks, localizing each track in virtual 3D space, and playing back the result using a head-related transfer function. Check "),e(i,{to:"https://github.com/kari-naga/OpenSpace",class:"underline"},{default:t(()=>[s("this Github repository")]),_:1}),s(" for more information. ")]),e(n,null,{default:t(()=>[e(a,{name:"logos:python"}),e(a,{name:"logos:ffmpeg-icon"})]),_:1})]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose pb-2","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[T]),description:t(()=>[A]),content:t(()=>[o("p",null,[s(" I built my portfolio (this site) using Vue with Nuxt.js static site generation. The site is hosted on GitHub Pages and the source can be found "),e(i,{to:"https://github.com/kari-naga/kari-naga.github.io",class:"underline"},{default:t(()=>[s("here")]),_:1}),s(". ")]),e(n,null,{default:t(()=>[e(a,{name:"logos:nuxt-icon"}),e(a,{name:"logos:vue"})]),_:1})]),_:1})]),_:1})}}});export{B as default};
