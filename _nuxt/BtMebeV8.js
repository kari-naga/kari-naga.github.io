import{b as d,a as h,_ as u}from"./BQwuCz5n.js";import{g as p,u as m,o as g,h as f,w as t,b as e,a,d as s,k as _}from"./DX6rmr5y.js";import{_ as w}from"./CdgOMrAZ.js";const b=""+new URL("hand-of-light.D1nciiPW.png",import.meta.url).href,k=""+new URL("box2d.DBDPqcpD.svg",import.meta.url).href,x=""+new URL("glm.DEkBoCgP.png",import.meta.url).href,y=""+new URL("rapidjson.Djt0scka.png",import.meta.url).href,v=""+new URL("skyward-counter.BdoTCwkw.png",import.meta.url).href,L=""+new URL("metroid.C4OoT5Z2.png",import.meta.url).href,I=""+new URL("synthszr.DRxxMPOM.png",import.meta.url).href,D=a("h2",{class:"text-xl"},"Hand of Light",-1),S=a("p",{class:"font-light"},"A unit-focused RTS game with a blend of futuristic and medieval warfare",-1),R=a("img",{src:b,alt:"Hand of Light Splash Image",class:"w-full h-auto my-2 shadow-md",width:"2137",height:"1202"},null,-1),z=a("h2",{class:"text-xl"},"Real Engine",-1),U=a("p",{class:"font-light"},"A simple 2D game engine with physics and LDtk support",-1),j=a("p",{class:"text-xl"},[s("Lua"),a("span",{class:"font-extralight"},"Bridge")],-1),M=a("img",{src:k,alt:"Box2D logo",class:"h-6"},null,-1),B=a("img",{src:x,alt:"GLM logo",width:"360",height:"198",class:"w-auto h-6"},null,-1),C=a("img",{src:y,alt:"RapidJson logo",width:"250",height:"52",class:"w-auto h-6 dark:h-8 dark:bg-white dark:p-2 dark:rounded-xl dark:overflow-visible"},null,-1),T=a("iframe",{width:"560",height:"315",class:"py-4 w-full h-auto aspect-video",src:"https://www.youtube.com/embed/-RBJeXMG2Lc?si=suvuaUDyUvHyUW-9",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:""},null,-1),H=a("h2",{class:"text-xl"},"Skyward Counter",-1),P=a("p",{class:"font-light"},"A bullet hell prototype with a unique twist",-1),A=a("img",{src:v,alt:"Metroid Recreation Screenshot",class:"w-full h-auto my-2 shadow-md",width:"2560",height:"1440"},null,-1),G=a("h2",{class:"text-xl"},"Metroid",-1),J=a("p",{class:"font-light"},"A faithful recreation of Metroid made in Unity",-1),N=a("img",{src:L,alt:"Metroid Recreation Screenshot",class:"w-full h-auto my-2 shadow-md",width:"800",height:"748"},null,-1),Y=a("h2",{class:"text-xl"},"Synthszr",-1),E=a("p",{class:"font-light"},"A complex synthesizer built with Svelte and Julia",-1),O=a("p",null," I worked with a team to build a digital synthesizer with a web-based frontend built in Svelte which communicates using WebSockets with a Julia backend for audio processing and output and accepts input from a MIDI keyboard. ",-1),V=a("img",{src:I,alt:"Synthszr UI",class:"w-full h-auto my-2 shadow-md",width:"1171",height:"454"},null,-1),$=a("h2",{class:"text-xl"},"OpenSpace",-1),q=a("p",{class:"font-light"},"An audio spatialization system for headphones",-1),W=a("h2",{class:"text-xl"},"Portfolio",-1),X=a("p",{class:"font-light"},"My portfolio and personal website",-1),r="Projects",ae=p({__name:"projects",setup(Z){return m({title:r}),(F,K)=>{const l=d,o=_,n=h,i=u,c=w;return g(),f(c,{title:r,gap:!1},{default:t(()=>[e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[D]),description:t(()=>[S]),content:t(()=>[a("p",null,[s(" I worked with a team to make Hand of Light, a unit focused indie-RTS set in a futuristic time where people use weapons similar to those of medieval warfare. In the game, players lead their armies through enemy territory, fight off enemy raids, and engage in massive strategic battles as they struggle against the malevolent Selenian forces. I worked on the UI, controls, music, and level design for the game. You can play and/or download Hand of Light on "),e(l,{to:"https://linkstorm.itch.io/hand-of-light",class:"underline"},{default:t(()=>[s("itch.io")]),_:1}),s(" or "),e(l,{to:"https://gamejolt.com/games/hand-of-light/891599",class:"underline"},{default:t(()=>[s("Game Jolt")]),_:1}),s("! ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:unity",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:c-sharp"}),e(o,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:jira"}),e(o,{name:"fad:logo-cubase",class:"ml-[-0.5rem] text-5xl"})]),_:1}),R]),_:1}),e(i,{"header-class":"flex flex-col items-center mi","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[z]),description:t(()=>[U]),content:t(()=>[a("p",null,[s(" I built a simple general purpose 2D game engine in C++ with Lua scripting, cross-platform graphics through SDL, physics through Box2D, and integration with the LDtk level design tool. I also used the GLM, Luabridge, and RapidJson libraries. You can find the engine "),e(l,{to:"https://github.com/kari-naga/real-engine",class:"underline"},{default:t(()=>[s("here")]),_:1}),s(", and you can watch a video covering some of the special features of the engine below. ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:c-plusplus"}),e(o,{name:"logos:lua",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),j,M,B,e(o,{name:"devicon:sdl",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),C,e(o,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"})]),_:1}),T]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[H]),description:t(()=>[P]),content:t(()=>[a("p",null,[s(" I built a prototype for a bullet hell game with a unique parrying mechanic in just a few weeks. In Skyward Counter, the only way to deal damage to the enemy is to parry their projectiles just before they hit you, making for a high-risk, high-reward, adrenaline-filled game. The game design, UI, and mechanics are completely bespoke, and I hope to eventually replace the assets with custom ones. You can play the game "),e(l,{to:"https://linkstorm.itch.io/skyward-counter",class:"underline"},{default:t(()=>[s("here")]),_:1}),s("! ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:unity",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:c-sharp"}),e(o,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:jira"})]),_:1}),A]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[G]),description:t(()=>[J]),content:t(()=>[a("p",null,[s(" I worked with a partner to build a faithful recreation of the classic NES game Metroid. I specifically built out the player movement systems, the animation system, the room transitions and door effects, the camera controller, and the custom laser beam weapon. You can play it "),e(l,{to:"https://linkstorm.itch.io/metroid",class:"underline"},{default:t(()=>[s("here")]),_:1}),s("! ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:unity",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:c-sharp"}),e(o,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:jira"})]),_:1}),N]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[Y]),description:t(()=>[E]),content:t(()=>[O,e(n,null,{default:t(()=>[e(o,{name:"logos:svelte-icon"}),e(o,{name:"logos:julia",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"logos:websocket",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(o,{name:"simple-icons:midi"})]),_:1}),V]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose pb-2","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[$]),description:t(()=>[q]),content:t(()=>[a("p",null,[s(" I conducted research on audio spatialization for music through headphones by splitting audio into separate instrument tracks, localizing each track in virtual 3D space, and playing back the result using a head-related transfer function. Check "),e(l,{to:"https://github.com/kari-naga/OpenSpace",class:"underline"},{default:t(()=>[s("this Github repository")]),_:1}),s(" for more information. ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:python"}),e(o,{name:"logos:ffmpeg-icon"})]),_:1})]),_:1}),e(i,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose pb-2","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[W]),description:t(()=>[X]),content:t(()=>[a("p",null,[s(" I built my portfolio (this site) using Vue with Nuxt.js static site generation. The site is hosted on GitHub Pages and the source can be found "),e(l,{to:"https://github.com/kari-naga/kari-naga.github.io",class:"underline"},{default:t(()=>[s("here")]),_:1}),s(". ")]),e(n,null,{default:t(()=>[e(o,{name:"logos:nuxt-icon"}),e(o,{name:"logos:vue"})]),_:1})]),_:1})]),_:1})}}});export{ae as default};
