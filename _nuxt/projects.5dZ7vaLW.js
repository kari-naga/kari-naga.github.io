import{a as d,b as h,_ as u}from"./Expander.vue.qeYXkCgu.js";import{g as p,u as m,o as _,h as f,w as t,b as e,a as o,d as a,k as g}from"./entry.7An5bPoJ.js";import{_ as b}from"./Content.vue.ZDVY3v-w.js";const x=""+new URL("metroid.uDqE-Wdo.png",import.meta.url).href,k=""+new URL("synthszr.0ccTDzjJ.png",import.meta.url).href,w=o("h2",{class:"text-xl"},"Metroid",-1),y=o("p",{class:"font-light"},"A faithful recreation of Metroid made in Unity",-1),v=o("img",{src:x,alt:"Metroid Recreation Screenshot",class:"w-full h-auto my-2 shadow-md",width:"800",height:"748"},null,-1),z=o("h2",{class:"text-xl"},"Synthszr",-1),I=o("p",{class:"font-light"},"A complex synthesizer built with Svelte and Julia",-1),S=o("p",null," I worked with a team to build a digital synthesizer with a web-based frontend built in Svelte which communicates using WebSockets with a Julia backend for audio processing and output and accepts input from a MIDI keyboard. ",-1),j=o("img",{src:k,alt:"Synthszr UI",class:"w-full h-auto my-2 shadow-md",width:"1171",height:"454"},null,-1),M=o("h2",{class:"text-xl"},"OpenSpace",-1),N=o("p",{class:"font-light"},"An audio spatialization system for headphones",-1),D=o("h2",{class:"text-xl"},"Portfolio",-1),C=o("p",{class:"font-light"},"My portfolio and personal website",-1),c="Projects",J=p({__name:"projects",setup(T){return m({title:c}),(U,V)=>{const i=d,s=g,n=h,l=u,r=b;return _(),f(r,{title:c,gap:!1},{default:t(()=>[e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[w]),description:t(()=>[y]),content:t(()=>[o("p",null,[a(" I worked with a partner to build a faithful recreation of the classic NES game Metroid. I specifically built out the player movement systems, the animation system, the room transitions and door effects, the camera controller, and the custom laser beam weapon. You can play it "),e(i,{to:"https://linkstorm.itch.io/metroid",class:"underline"},{default:t(()=>[a("here")]),_:1}),a("! ")]),e(n,null,{default:t(()=>[e(s,{name:"logos:unity",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(s,{name:"logos:c-sharp"}),e(s,{name:"logos:git",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(s,{name:"logos:jira"})]),_:1}),v]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[z]),description:t(()=>[I]),content:t(()=>[S,e(n,null,{default:t(()=>[e(s,{name:"logos:svelte-icon"}),e(s,{name:"logos:julia",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(s,{name:"logos:websocket",class:"dark:bg-white dark:p-1 dark:rounded-xl dark:overflow-visible"}),e(s,{name:"simple-icons:midi"})]),_:1}),j]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[M]),description:t(()=>[N]),content:t(()=>[o("p",null,[a(" I conducted research on audio spatialization for music through headphones by splitting audio into separate instrument tracks, localizing each track in virtual 3D space, and playing back the result using a head-related transfer function. Check "),e(i,{to:"https://github.com/kari-naga/OpenSpace",class:"underline"},{default:t(()=>[a("this Github repository")]),_:1}),a(" for more information. ")]),e(n,null,{default:t(()=>[e(s,{name:"logos:python"}),e(s,{name:"logos:ffmpeg-icon"})]),_:1})]),_:1}),e(l,{"header-class":"flex flex-col items-center","content-class":"pt-2 flex flex-col items-center gap-2 max-w-prose","button-style":"90",bg:"bg-slate-100 dark:bg-zinc-900"},{label:t(()=>[D]),description:t(()=>[C]),content:t(()=>[o("p",null,[a(" I built my portfolio (this site) using Vue with Nuxt.js static site generation. The site is hosted on GitHub Pages and the source can be found "),e(i,{to:"https://github.com/kari-naga/kari-naga.github.io",class:"underline"},{default:t(()=>[a("here")]),_:1}),a(". ")]),e(n,null,{default:t(()=>[e(s,{name:"logos:nuxt-icon"}),e(s,{name:"logos:vue"})]),_:1})]),_:1})]),_:1})}}});export{J as default};
